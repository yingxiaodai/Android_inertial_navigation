package com.example.mytext;

import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.SparseArray;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {
    private TextView txtNum;       //接收数据显示句柄
    private TextView tv;
    private Button  btnLess;    //前进按键
    private Button btnAdd;    //前进按键
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        txtNum = findViewById(R.id.txt_num);
        btnLess = findViewById(R.id.btn_less);
        btnAdd = findViewById(R.id.btn_add);
        tv=findViewById(R.id.tv);
        // 点击事件
        btnLess.setOnClickListener(onClickListener);
        btnAdd.setOnClickListener(onClickListener);
        // 长按事件
        btnLess.setOnLongClickListener(onLongClickListener);
        btnAdd.setOnLongClickListener(onLongClickListener);
        // 触摸事件
        btnLess.setOnTouchListener(onTouchListener);
        btnAdd.setOnTouchListener(onTouchListener);

    }
    /**
     * 加
     */
    @SuppressLint("SetTextI18n")
    private void add() {
        tv.append("+");
        int num = Integer.parseInt(txtNum.getText().toString());
        num ++;
        txtNum.setText(num + "");
    }
    /**
     * 减
     */
    @SuppressLint("SetTextI18n")
    private void less() {
        tv.append("-");
        int num = Integer.parseInt(txtNum.getText().toString());
        if (num != 0) {
            num --;
            txtNum.setText(num + "");
        }
    }

    /**
     * 点击
     */
    private View.OnClickListener onClickListener = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            switch (v.getId()) {
                case R.id.btn_less:
                    // 单点减
                    less();
                    break;
                case R.id.btn_add:
                    // 单点加
                    add();
                    break;
            }
        }
    };
    /**
     * 长按
     */
    private View.OnLongClickListener onLongClickListener = new View.OnLongClickListener() {
        @Override
        public boolean onLongClick(View v) {
            mBtnTouchMap.put(v.getId(), true);
            mHandler.sendEmptyMessage(LONG_CLICK);
            return false;
        }
    };
    /**
     * 触摸
     * 监听手指抬起，长按结束
     */
    private View.OnTouchListener onTouchListener = new View.OnTouchListener() {
        @Override
        public boolean onTouch(View v, MotionEvent event) {
            switch (event.getAction()) {
                case MotionEvent.ACTION_UP:
                    // 手指举起
                    mBtnTouchMap.put(v.getId(), false);
                    break;
            }
            return false;
        }
    };
    /** 长按标记，记录每个按钮是否正在按着 */
    private SparseArray<Boolean> mBtnTouchMap = new SparseArray<>();
    /** handler标记 */
    private static final int LONG_CLICK = 10001;
    /** 处理 */
    @SuppressLint("HandlerLeak")
    private Handler mHandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case LONG_CLICK:
                    for (int i = 0; i < mBtnTouchMap.size(); i++) {
                        int viewId = mBtnTouchMap.keyAt(i);
                        // 长按结束，就不再继续往下走了
                        if (!mBtnTouchMap.valueAt(i)) continue;
                        switch (viewId) {
                            case R.id.btn_less:
                                less();
                                break;
                            case R.id.btn_add:
                                add();
                                break;
                        }
                        // 每隔150毫秒做一次
                        mHandler.sendEmptyMessageDelayed(LONG_CLICK, 15);
                    }
                    break;
            }
        }
    };


}
